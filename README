This is the README for crosstool-NG

Crosstool-NG follows the autoconf dance. So, to get you
kick-started, just run:
    ./configure --help


Dorimanx Note:
=====================================================================================
To start you will need to build the tool for your machine!
and to have all needed packages installed!

Ubuntu Linux 64BIT 10.x -> 12.04 or higher

sudo apt-get install mercurial mercurial-common flex bison gperf ncurses-dev texinfo gcc g++ \
autoconf automake libtool gawk patch autotools-dev libsigsegv2 libmpfr-dev libgmp-dev \
libltdl-dev libgmpxx4ldbl libmpc-dev expat libexpat1-dev libpython3.3 libpython3.3-stdlib \
libssl-dev libssl-dev zlib1g-dev subversion

./bootstrap
./configure --enable-local
make


Then you will have the tool READY and configured for building

Linaro 14.05 GCC 4.9.1 for LG with ARM and Cortex-a15 CPU neon-vfpv4 hard

the LG set is just a NAME, you can set what ever you need. also the cortex set. 

any way, all can be changed using the config menu

./ct-ng menuconfig

Tool will download all you need! you must have internel connection!

to build do this:

logon to SSH as USER!!! not ROOT! just simple user!

./ct-ng build.32 (thread number = cores x2) is have 16 cores :)


NOW WAIT!!!! :)

My build finish after 25~30MIN without downloading! when rebuilding!

first time build will include downloading about 150~200MB 

so it's will take time, just grab some coffee and relax :)

if you want tool to USE new linaro tool chain source, you will need to add it in config folder

vi config/cc/gcc.in

change the:
prompt "linaro-4.8-2014.04" to prompt "linaro-4.8-2014.05"

then the:
default "linaro-4.8-2014.04" if CC_V_linaro_4_8 to default "linaro-4.8-2014.05" if CC_V_linaro_4_8

and when you build again, tool will download the source if it's exist in linaro launch pad page.

https://launchpad.net/gcc-linaro


This is how it's should look like when build is working! and finish!

[dorimanx@dorimanx crosstool-ng]$ ./ct-ng build.32
[INFO ]  Performing some trivial sanity checks
[INFO ]  Build started 20140607.202240
[INFO ]  Building environment variables
[EXTRA]  Preparing working directories
[EXTRA]  Installing user-supplied crosstool-NG configuration
[EXTRA]  =================================================================
[EXTRA]  Dumping internal crosstool-NG configuration
[EXTRA]    Building a toolchain for:
[EXTRA]      build  = x86_64-unknown-linux-gnu
[EXTRA]      host   = x86_64-unknown-linux-gnu
[EXTRA]      target = arm-LG-linux-gnueabi
[EXTRA]  Dumping internal crosstool-NG configuration: done in 0.10s (at 00:13)
[INFO ]  =================================================================
[INFO ]  Retrieving needed toolchain components' tarballs
[EXTRA]    Retrieving 'linux-3.4.91'
[EXTRA]    Saving 'linux-3.4.91.tar.xz' to local storage
[INFO ]  Retrieving needed toolchain components' tarballs: done in 110.32s (at 02:03)
[INFO ]  =================================================================
[INFO ]  Extracting and patching toolchain components
[EXTRA]    Extracting 'linux-3.4.91'
[EXTRA]    Patching 'linux-3.4.91'
[EXTRA]    Extracting 'binutils-2.24'
[EXTRA]    Patching 'binutils-2.24'
[EXTRA]    Extracting 'eglibc-2_19'
[EXTRA]    Patching 'eglibc-2_19'
[EXTRA]    Extracting 'gdb-7.7'
[EXTRA]    Patching 'gdb-7.7'
[INFO ]  Extracting and patching toolchain components: done in 52.42s (at 02:56)
[EXTRA]  Saving state to restart at step 'libc_check_config'...
[EXTRA]  Saving state to restart at step 'companion_libs_for_build'...
[EXTRA]  Saving state to restart at step 'binutils_for_build'...
[EXTRA]  Saving state to restart at step 'companion_libs_for_host'...
[INFO ]  =================================================================
[INFO ]  Installing GMP for host
[EXTRA]    Configuring GMP
[EXTRA]    Building GMP
[EXTRA]    Installing GMP
[INFO ]  Installing GMP for host: done in 42.03s (at 03:38)
[INFO ]  =================================================================
[INFO ]  Installing MPFR for host
[EXTRA]    Configuring MPFR
[EXTRA]    Building MPFR
[EXTRA]    Installing MPFR
[INFO ]  Installing MPFR for host: done in 13.29s (at 03:52)
[INFO ]  =================================================================
[INFO ]  Installing ISL for host
[EXTRA]    Configuring ISL
[EXTRA]    Building ISL
[EXTRA]    Installing ISL
[INFO ]  Installing ISL for host: done in 18.65s (at 04:10)
[INFO ]  =================================================================
[INFO ]  Installing CLooG for host
[EXTRA]    Configuring CLooG
[EXTRA]    Building CLooG
[EXTRA]    Installing CLooG
[INFO ]  Installing CLooG for host: done in 7.25s (at 04:18)
[INFO ]  =================================================================
[INFO ]  Installing MPC for host
[EXTRA]    Configuring MPC
[EXTRA]    Building MPC
[EXTRA]    Installing MPC
[INFO ]  Installing MPC for host: done in 6.13s (at 04:24)
[EXTRA]  Saving state to restart at step 'binutils_for_host'...
[INFO ]  =================================================================
[INFO ]  Installing binutils for host
[EXTRA]    Configuring binutils
[EXTRA]    Prepare binutils for static build
[EXTRA]    Building binutils
[EXTRA]    Installing binutils
[INFO ]  Installing binutils for host: done in 53.85s (at 05:19)
[EXTRA]  Saving state to restart at step 'cc_core_pass_1'...
[INFO ]  =================================================================
[INFO ]  Installing pass-1 core C compiler
[EXTRA]    Configuring gcc
[EXTRA]    Building gcc
[EXTRA]    Installing gcc
[INFO ]  Installing pass-1 core C compiler: done in 178.29s (at 08:21)
[EXTRA]  Saving state to restart at step 'kernel_headers'...
[INFO ]  =================================================================
[INFO ]  Installing kernel headers
[EXTRA]    Installing kernel headers
[EXTRA]    Checking installed headers
[INFO ]  Installing kernel headers: done in 8.83s (at 08:43)
[EXTRA]  Saving state to restart at step 'libc_start_files'...
[INFO ]  =================================================================
[INFO ]  Installing C library headers & start files
[EXTRA]    Configuring C library
[EXTRA]    Installing C library headers
[EXTRA]    Installing C library start files
[INFO ]  Installing C library headers & start files: done in 28.10s (at 09:20)
[EXTRA]  Saving state to restart at step 'cc_core_pass_2'...
[INFO ]  =================================================================
[INFO ]  Installing pass-2 core C compiler
[EXTRA]    Configuring gcc
[EXTRA]    Building gcc
[EXTRA]    Installing gcc
[INFO ]  Installing pass-2 core C compiler: done in 216.86s (at 13:05)
[EXTRA]  Saving state to restart at step 'libc'...
[INFO ]  =================================================================
[INFO ]  Installing C library
[EXTRA]    Configuring C library
[EXTRA]    Building C library
[EXTRA]    Installing C library
[INFO ]  Installing C library: done in 226.62s (at 17:04)
[EXTRA]  Saving state to restart at step 'cc_for_build'...
[EXTRA]  Saving state to restart at step 'cc_for_host'...
[INFO ]  =================================================================
[INFO ]  Installing final compiler
[EXTRA]    Configuring gcc
[EXTRA]    Building gcc
[EXTRA]    Installing gcc
[INFO ]  Installing final compiler: done in 289.46s (at 22:16)
[EXTRA]  Saving state to restart at step 'libelf_for_target'...
[EXTRA]  Saving state to restart at step 'binutils_for_target'...
[EXTRA]  Saving state to restart at step 'debug'...
[INFO ]  =================================================================
[INFO ]  Installing cross-gdb
[EXTRA]    Configuring cross-gdb
[EXTRA]    Building cross-gdb
[EXTRA]    Installing cross-gdb
[EXTRA]    Installing '.gdbinit' template
[INFO ]  Installing cross-gdb: done in 119.50s (at 25:46)
[INFO ]  =================================================================
[INFO ]  Installing native gdb
[EXTRA]    Building static target ncurses
[26:06] \
[26:07] \
[26:07] |
[EXTRA]    Building static target expat
[EXTRA]    Configuring native gdb
[EXTRA]    Building native gdb
[EXTRA]    Installing native gdb
[INFO ]  Installing native gdb: done in 155.92s (at 28:22)
[INFO ]  =================================================================
[INFO ]  Installing gdbserver
[EXTRA]    Configuring gdbserver
[EXTRA]    Building gdbserver
[EXTRA]    Installing gdbserver
[INFO ]  Installing gdbserver: done in 27.15s (at 28:50)
[EXTRA]  Saving state to restart at step 'test_suite'...
[EXTRA]  Saving state to restart at step 'finish'...
[INFO ]  =================================================================
[INFO ]  Cleaning-up the toolchain's directory
[INFO ]    Stripping all toolchain executables
[EXTRA]    Installing the populate helper
[EXTRA]    Installing a cross-ldd helper
[EXTRA]    Creating toolchain aliases
[EXTRA]    Removing access to the build system tools
[EXTRA]    Removing installed documentation
[INFO ]  Cleaning-up the toolchain's directory: done in 4.85s (at 29:44)
[INFO ]  Build completed at 20140607.205223
[INFO ]  (elapsed: 29:43.13)
[INFO ]  Finishing installation (may take a few seconds)...
[29:44] / [dorimanx@dorimanx crosstool-ng]$


Your new ready toolchain will be at builds/arm-LG-linux-gnueabi/

have fun and thank me later :)

======================================================================================


If you are using a development snapshot, you'll have to
create the configure script, first. Just run:
    ./bootstrap

You will find the documentation in the directory 'docs'.
Here is a quick overview of what you'll find there:
  0 - Table of content
  1 - Introduction
  2 - Installing crosstool-NG
  3 - Configuring a toolchain
  4 - Building the toolchain
  5 - Using the toolchain
  6 - Toolchain types
  7 - Contributing
  8 - Internals
  A - Credits
  B - Known issues
  C - Misc. tutorials

You can also point your browser at:
  http://crosstool-ng.org/

Aloha!
